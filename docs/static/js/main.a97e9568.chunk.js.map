{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OAEI,sBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SAEI,uBACIO,KAAM,OACNC,MAAQT,EACRU,SAvBc,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,a,+BCLfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAUH,GAF/C,+DAICI,MAAOF,GAJR,cAIZG,EAJY,gBAMKA,EAAKC,OANV,uBAMVC,EANU,EAMVA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXxB,kBAoBXM,GApBW,4CAAH,sDCFVO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAQf,EAAMgB,IAAMN,IACzB,kCAAMA,SCJLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECEb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAjBAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMlB,CAAEpB,IAIEqB,EDzB0BK,CAAc1B,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAErB,OAEI,qCACI,qBAAIJ,UAAU,oCAAd,cAAsDhB,EAAtD,OAEEoB,GAAW,mBAAGJ,UAAW,mCAAd,wBAEb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGKA,GADCA,EAAIC,aEnBzBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAY9B,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BAGQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAGQA,SAAWA,GAFLA,Y,MCvBtC6B,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.a97e9568.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            \r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            \r\n            <input\r\n                type= \"text\"\r\n                value= {inputValue}\r\n                onChange= { handleInputChange }\r\n            \r\n            />\r\n\r\n        </form>\r\n   \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\n   export const getGifs = async( category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=m7XJ8i4FH8D3km1JkatDJ3nhg6iLso2v`\r\n\r\n        const resp = await fetch( url );\r\n\r\n        const { data } = await resp.json();\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n\r\n\r\n            }\r\n\r\n\r\n        })\r\n        \r\n\r\n        return gifs;\r\n\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    // console.log({id, title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInRight\">\r\n            <img src = { url } alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__zoomIn\" > { category } </h3>\r\n\r\n            { loading && <p className= \"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                            \r\n                            key={ img.id }\r\n                            { ...img }\r\n                            \r\n                            />\r\n                        ))\r\n\r\n                    }\r\n                    \r\n\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect( () =>{\r\n           \r\n        getGifs( category )\r\n        .then(imgs =>{\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n\r\n            });\r\n\r\n        })\r\n\r\n    }, [ category ] )\r\n\r\n \r\n\r\n    return state; // el state es {data: [], loaging: true }\r\n\r\n}","import React, { useState } from 'react' // el esnipet rafc es para crear la estructura de el componente\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( cats => [...cats, 'HunterXhunter']);\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr/>\r\n\r\n          \r\n            <ol>\r\n                \r\n                { // el map es para recorrer todo un arreglo, transformarlos y que regrese algo\r\n                    categories.map( category => (\r\n                        \r\n                        <GifGrid \r\n                                key={ category }\r\n                            \r\n                                category={ category } \r\n                            />\r\n                      )  )\r\n                }\r\n            </ol>\r\n\r\n         \r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n    document.getElementById('root')\n);\n"],"sourceRoot":""}